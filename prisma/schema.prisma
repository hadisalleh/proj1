// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Trip {
  id           String   @id @default(cuid())
  title        String
  description  String
  locationName String
  latitude     Float
  longitude    Float
  duration     Int      // in hours
  basePrice    Decimal  @db.Decimal(10, 2)
  images       String[]
  inclusions   String[]
  boatType     String
  fishingTypes String[]
  maxGuests    Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  bookings     Booking[]
  reviews      Review[]
  
  @@map("trips")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  phone     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  bookings  Booking[]
  reviews   Review[]
  
  @@map("users")
}

model Booking {
  id          String        @id @default(cuid())
  tripId      String
  userId      String
  startDate   DateTime
  endDate     DateTime?
  guests      Int
  totalPrice  Decimal       @db.Decimal(10, 2)
  status      BookingStatus @default(PENDING)
  paymentId   String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  
  trip        Trip          @relation(fields: [tripId], references: [id])
  user        User          @relation(fields: [userId], references: [id])
  
  @@map("bookings")
}

model Review {
  id        String   @id @default(cuid())
  tripId    String
  userId    String
  rating    Int      @db.SmallInt // 1-5 stars
  comment   String?
  images    String[]
  tripDate  DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  trip      Trip     @relation(fields: [tripId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  
  @@unique([tripId, userId])
  @@map("reviews")
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}